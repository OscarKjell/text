on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com"}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_LIBS_USER: /tmp/Library

    steps:
      - uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libcurl4-openssl-dev libxml2-dev libssl-dev
          sudo apt-get install -y libharfbuzz-dev libfribidi-dev
          sudo apt-get install -y pandoc
        shell: bash

      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2-branch

      - name: Install required R packages
        run: |
          options(repos = c(CRAN = "https://cran.rstudio.com"))
          install.packages("remotes")
          remotes::install_cran(c(
            "topics", "rcmdcheck", "devtools", "dplyr", "tidyr", "ggplot2",
            "ggrepel", "cowplot", "parsnip", "recipes", "rsample",
            "reticulate", "tune", "workflows", "yardstick",
            "future", "furrr", "rmarkdown", "evaluate"
          ))
        shell: Rscript {0}

      - name: Verify installed packages
        run: |
          required_packages <- c(
            "topics", "rcmdcheck", "devtools", "dplyr", "tidyr", "ggplot2",
            "ggrepel", "cowplot", "parsnip", "recipes", "rsample",
            "reticulate", "tune", "workflows", "yardstick",
            "future", "furrr", "rmarkdown", "evaluate"
          )
          not_installed <- setdiff(required_packages, rownames(installed.packages()))
          if (length(not_installed) > 0) {
            stop("Some required packages are not installed: ", paste(not_installed, collapse = ", "))
          }
        shell: Rscript {0}

      - name: Run R CMD Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"),
            build_args = "--no-build-vignettes"
          )
        shell: Rscript {0}
