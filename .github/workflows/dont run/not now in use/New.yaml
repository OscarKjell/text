
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: System specific installation WithPy

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: 3.7.0

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

#      - name: Cache R packages
#        if: runner.os != 'Windows'
#        uses: actions/cache@v1
#        with:
#          path: ${{ env.R_LIBS_USER }}
#          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
#          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')
          sudo apt install libharfbuzz-dev
          sudo apt install libfribidi-dev
          sudo apt install libcurl4-doc
          sudo apt install libidn11-dev
          sudo apt install libkrb5-dev
          sudo apt install libldap2-dev
          sudo apt install librtmp-dev
          sudo apt install libssh2-1-dev

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE, force = TRUE)
          remotes::install_cran("rcmdcheck", force = TRUE)
        shell: Rscript {0}

      - name: Fix Conda permissions on macOS (SUDO)
        if: runner.os == 'macOS'
        run: sudo chown -R $UID $CONDA

      - name: Installing text and testing it
        run:  |
          install.packages("devtools")
          library(devtools)
          devtools::install_github("oscarkjell/text")
          text::textrpp_install(prompt = FALSE)
          text::textrpp_initialize(textEmbed_test = TRUE)
        shell: Rscript {0}


      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
