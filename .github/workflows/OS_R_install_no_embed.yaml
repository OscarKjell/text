on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

name: OS-Tests

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-24.04, r: 'release'}
          - {os: macOS-latest, r: '4.3.0', python: '3.9'}
          - {os: macOS-latest, r: '4.3.0', python: '3.11'}

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

     # This is needed
      - name: Install macOS Utilities
        if: runner.os == 'macOS'
        run: |
          brew update || echo "Homebrew update failed"
          brew install libomp || echo "libomp installation failed"
          brew install qpdf || echo "qpdf installation failed but continuing"
          export DYLD_LIBRARY_PATH=$(brew --prefix libomp)/lib
          echo "DYLD_LIBRARY_PATH=$(brew --prefix libomp)/lib" >> $GITHUB_ENV

      # Set up R environment
      - uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2-branch

      # Install Miniconda (all OS)
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.config.python }}

#      - name: Install Conda Dependencies
#        run: |
#          conda config --add channels defaults
#          conda config --set solver classic
#          conda install -c conda-forge numpy
#
      - name: Query R Dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      # Cache R packages
      - name: Cache R Packages
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      # Install system dependencies (Linux only)
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
          libcurl4-openssl-dev \
          libgit2-dev \
          libssl-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libxml2-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev \
          libfontconfig1-dev \
          libicu-dev \
          libcairo2-dev \
          default-jdk
          sudo R CMD javareconf

      # stringi
      - name: Reinstall stringi from source on Ubuntu 24.04
        if: matrix.config.os == 'ubuntu-24.04'
        run: |
          install.packages("stringi", type = "source")
        shell: Rscript {0}

      # Install R dependencies
      - name: Install R Dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      # Fix Conda permissions (macOS only)
      - name: Fix Conda Permissions
        if: runner.os == 'macOS'
        run: sudo chown -R $UID $CONDA

      # Install and test "text" package
      - name: Install and Test "text" Package
        run: |
          install.packages("devtools")
          library(devtools)
          devtools::install_github("oscarkjell/text")
          text::textrpp_install(prompt = FALSE)
          text::textrpp_initialize(textEmbed_test = TRUE)
        shell: Rscript {0}

      # Session Info
      - name: Session Info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
